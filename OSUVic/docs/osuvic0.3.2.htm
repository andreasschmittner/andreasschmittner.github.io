Loading...
Editing OSUVic 	
Back *[Back]* 
Forward *[Forward]* 
Advanced *[Advanced]* 
Main Page *[Home]* 
Unlock *[Unlock]* 
Lock *[Lock]* 
Print *[Print]* 
Edit *[Edit]* 
Cancel [Cancel] 
Save *[Save]* 

 

Main Page

OSUVic
UVic
PLASIM
Oasis3

To do list

Lahey compiler
Portland Group
SunStudio 12
MPIs

Special::New Page
Special::Backlinks
Special::Search
------------------------------------------------------------------------
[Edit]
------------------------------------------------------------------------
[Edit]


  OSUVic Coupled Climate Model

------------------------------------------------------------------------


    Table of contents

Installation <#installation>
Setting up a run <#setting>
Running <#running>
Coupled fields <#coupled>

  * PUMA -> UVic <#pumauvic>
  * UVic -> PUMA <#uvicpuma>

Notes on the calculation of the sensible heat flux <#sensible>
Notes on the time averaging of coupled fields <#timeaveraging>


------------------------------------------------------------------------


  Installation



1 - Create a master installation of Oasis
The following files were modified and need to replace the original
distribution files:

  * inipar.F (RUNTIME is in days instead of seconds to allow for longer
    runs).

2 - Create a master installation of UVic

  * Change mk.ver in your "Version_Directory" to includes the oasis .h
    files. For example:

Compiler_XX_linux = lfc -O3 -CcdRR8
-I/raid1/tsilva/local/prism/Linux/build/lib/psmile.MPI1/ -c

  * Upgrade mk to mk_eby_24jan08

A corrected version of mk to allow couplemod.F90 to contain both the
module and subroutines. Otherwise mk recurses infinitely because the
file uses itself. Copy or link this file to UVic_ESCM/ to replace the
stock mk.


  Setting up a run



1 - Create a directory for your coupled run

mkdir myrun001
cd myrun001


2 - Copy the canonical run to your local run directory

cp -r ~/OSUVic0.3.1/* .
tree -d
.
|-- Most15.043.coupled
|   |-- images
|   |-- namelists
|   |-- plasim
|   |   |-- bin
|   |   |-- bld
|   |   |-- dat
|   |   |-- doc
|   |   |-- run
|   |   `-- src
|   |-- postprocessor
|   |-- puma
|   |   |-- bin
|   |   |-- bld
|   |   |-- dat
|   |   |-- doc
|   |   |-- run
|   |   `-- src
|   `-- tools
|-- UVic.coupled
|   |-- code
|   |   |-- D
|   |   `-- O
|   |-- data
|   `-- updates
|-- docs
|-- ferret
`-- input
    |-- oasis3
    `-- restart

ls
burn.sh            clean.sh    docs    input               namcouple      puma_namelist  run.csh
cf_name_table.txt  control.in  ferret  Most15.043.coupled  plasim_status  restart.nc     UVic.coupled




NOTE: Make sure that mk.in is pointing to your local UVic directory.

3 - Build UVic

cd UVic.coupled
mk o
build.uvi.sh



4 - Build PUMA using MoSt

NOTE: Make sure that the following variables in plasim/src/make_plasim
are set for your machine
MOST_F90_OPTS = -I
GUILIB
PRISMLIB
NETCDFLIB
There are already files for aragorn and lorenz clusters:
make_plasim.lorenz and make_plasim.aragorn

cd ../Most15.043.coupled
.configure            (only needed the first time you set up the model)
make                  (only needed the first time you set up the model)
most.x



On model starter window check these options
ON Planet Simulator
ON Write output
OFF Run with GUI
and press save and exit to build the puma executable.


  Running



For long runs (> 40 years) you can run the model in chunks (e.g. of 40
years).
The number of chunks is given by noc (number of chunks) in the script
run.csh.

1 - Set the run length (length of each chunk) on these files in your run
directory

  ./namcouple
    RUNTIME =    ! number of days
  ./control.in
    runlen =     ! number of days
  ./puma_namelist
    N_RUN_YEARS = 0
    N_RUN_MONTHS = 0
    N_RUN_DAYS = 15  ! Use only one of the parameters



2 - Restart files

The default is restarting from a previous run. For this you need the
restart.nc file for UVic and the plasim_status file for PUMA.
You can also start from generic restart files which are in
/input/restart. For this option comment out the indicated lines in run.csh.

Make sure to synchronize the backup restart output from UVic and PUMA.
E.g. in control.in restint=3650 and in puma_namelist NTSPRES = 11680
(if MPSTEP = 45). This example will lead to a 10 year interval for
backup restart output (files rest.yyyyy.mm.dd.nc and
plasim_status.yyyyy.mm.dd).

3 - Submit a job with qsub

qsub run.csh

4 - Output files:

  * PUMA

- puma_output - PUMA's binary output. Specified in puma_namelist. Check
script burn.surf.sh to see how to extract variables and write to a
netcdf file.

- pumaii.prt0 - Calls to clim library (part of oasis)

- pumaii.out - standard runtime output

  * UVic

- snap*.nc, tsi*.nc, tavg*.nc - UVic's netcdf output. Parameters
specified in control.in

- uvices.prt0 - Calls to clim library (part of oasis).

- uvices.out - standard runtime output (pr file in UVic stand alone)

  * oasis

- cplout - Oasis output.

- Oasis.prt - Calls to clim library

- <field_name>out.<date>.nc - If the fields are defined EXPOUT in
namcouple then these are written to netcdf files (only for debugging).



  Coupled fields



    PUMA -> UVic


*field name*	*Descrip.*	*In Puma*	*units*	*In UVic*	*units*
P2UPR_	Total precip.	upra=<dprl+dprc>	m/s?	precip=cpr*100	g cm-2 s-1
P2UPRS	Precip. as snow	uprsa=<dprs>	m/s?	psno=cprs*100	g cm-2 s-1
P2UQS_	Surface spec. hum.	uqsa=<dq(NLEV)>	kg/kg	at(2,ishum)=cqsa	g g-1
P2UTAUX	Zonal. surf. wind str.	utauxa=<dtaux(NLEV)>	Pa
sbc(itaux)=ctaux*10	dynes cm-2
P2UTAUY	Meridional surf. wind str.	utauya=<dtauy(NLEV)>	Pa
sbc(itauy)=ctauy*10	dynes cm-2
P2UWS_	Wind speed	uwsa=<(du(NLEV)^2+dv(NLEV)^2)^.5>	m s-1
sbc(iws=cws*100	cm s-1
P2UTSA	Surface air temperature	utsaa=<dtsa>	K	at(:,:,2,isat) =
ctsa(:,:)-273.15	C
P2UDNSW	Incident surf. SW flux	udnswa=<dfd(NLEP>	W m-2	dniswr =
cswfl*1000	mW m-2
P2UDNLW	Incident surf. LW flux	udnlwa=<dftd(NLEP>	W m-2	dnclwr =
clwfl*1000 uplwr=upclwr-dnclwr	mW m-2



*1. Liquid precipitation * OP2UPRI_
*2. Snow precipitaion * OP2UPRS_
*3. Surface air specific humidity * OP2UQS_
*4. Zonal surface wind stress * OP2UTAUX
*5. Meridional surface wind stress * OP2UTAUY
*6. Wind speed * UP2UWS__
*7. Surface air temperature * OP2UTSA_
*8. Incident surface shortwave flux (downward direction)* OP2UDNSW
*9. Downwelling longwave flux * OP2UDNLW


    UVic -> PUMAII

*field name*	*Descrip.*	*In UVic*	*units*	*In Puma*	*units*
U2PZ0_	Surf. roughness length		?	z0=uz0c	m ?
U2PSHFL	Surf. sensible heat flux	cshfl = <upsens>	mW/m-2
dshfl(:)=ushflc(:)/(-1000.)	W/m-2
U2PEVAP	Evap. and sublim. flux	cevap = <evap>	g cm-2 s-1	devap(:)= -.01
* abs(uevapc(:)) Conservation issue with abs !	m s-1 up is negative
U2PUPLW	Up. comp. of LW flux	cuplw=<upclwr>	g s-3 = mW m-2
duplwc(:)=uuplwc(:)/1000.	W m-2 up is negative
U2PUPSW	Up. comp. of SW flux	cupsw = <dniswr-dnswr>	g s-3 = mW m-2
dupswc(:)=(-1.)*uupswc(:)/1000.	W m-2 up is negative
U2PTS_	Surface temperature	see notes below	deg. C
dt(:,NLEP)=utsc(:)+TMELT	deg K




*1. Surface specific humidity * OU2PQS__
*2. Surface roughness * OU2PZ0__
*3. Surface temperature * OU2TS__
The average surface temperature is calculated like this:

      where (tmsk(:,:) .ge. 0.5)
        cts(:,:) = sbc(:,:,isst)*(1.-aice(:,:,2)) +                     &
     &             tice(:,:)*aice(:,:,2) + cts(:,:)
      elsewhere
        cts(:,:) = surf(:,:)*(1.-aice(:,:,2)) +                         &
     &             tice(:,:)*aice(:,:,2) + cts(:,:)
      end where




*4. Evaporation * OU2PEVAP
*5. Upward longwave flux (upward) * OU2PUPLW
- Calculated in UVic as (sigma*T^4)
- Ignores the "relection" of atmospheric thermal radiation (~2%)
considered in puma's swr scheme
- In PUMA replaces zbu(:,NLEP)(=duplwc) in lwr (radmod.f90)
- Used in calculating dT/dt in radstep.
*6. Surface Albedo * OU2PALB
- Read in ... -> ualbc(:) -> dalbc(:)
- Surface albedo is passed to PUMA instead of F_SW^up = F_WD^nd *Alb.
This is because the SW radiation scheme in PUMA calculates the downward
flux at the bottom level as a function of the surface albedo. As such it
is not possible to introduce in PUMA a F_SW^up calculated in UVic in
higher spatial resolution. The *net* F_SW^dn is passed to UVic after
being calculated in PUMA (incident or absorbed?).
- For the initial short iterations and the first standard iteration dalb
is calculated from plasim's surface models. This is because radstep is
called before surfstep->couplestep receives dalb values from uvic. If
dls(:)=dicec(:)=0 then alb=MIN1(0.05/(zmu0(:)+0.15),0.15).




    Notes on the calculation of the Sensible Heat Flux

  * Bulk formula

F_T = rho_atm*C_H*ws*cp_atm*(T_atm-T_s)

  * In the non-coupled UVic

C_H=0.94*dalt
dalt_o=1.4E-3 ocean
dalt_i=1.4E-3 ice
dalt_v=3.3E-3 vegetation
=f(z0) vegetation

  * In Plasim

C_H=(k/ln(z/z0))^2*f_h(Ri,z/z0)
See eq (2.5) in Plasim's manual

dshfl = konst2*kdiff(:)*dp(:)
konst2 = dsigma(NLEV)/zdelt/ga
kdiff(:) = konst1 *dtransh(:)/dt(:,NLEP)
konst1 = ga*zdelt/dsigma*gascon
dtransh = ws*kblnzbz02*f_h(:)



  Notes on the time averaging of coupled fields


  * Wind stress

tau = rho.C_D.|U|U
C_D = f( 1/z_0 , Ri( |U|^-2 , (T-T_s) ) )

Calculated in PUMA for every time step and averaged between coupling
time steps.
Only the dependency o T_s is simplified by using avg(T_s) passed from UVic.

  * Latent heat

LH = L.rho.C_h.C_m.|U|.(q-q_s)
C_h = f( Ri( |U|^-2 , T-T_s ) )

Calculated in UVic due to the dependency of C_h and C_m on surface
properties on the UVic grid: sea ice cover, vegetation class, etc...
Thus it is assumed that atmospheric variables (T, q, |U|) don't change
with time, which will introduce errors.

Page title:
Wiki Code: About tables
HTML Code:


    Debug console

This is a development BETA version of Wiki On a Stick; it is not
suggested to use it with important data. If you want to disable this
debug message and console, you will have to find the line that says
*woas["debug"] = true;* and change it to *false*.

 

------------------------------------------------------------------------
_About Wiki on a Stick v0.9.6B
